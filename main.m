%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Title: Optimisation in electric drives and inverters                    %
% Topic: Power Electronics, Distortions                                   %
% File: main                                                              %
% Date: 05.11.2021                                                        %
% Author: Dr. Pascal A. Schirmer                                          %
% Version: V.0.1                                                          %
% Copyright: Pascal Schirmer                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Parameters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%---------------------------------------------------
% Init PWM
%---------------------------------------------------
inp.Theta_u_i = linspace(0,2*pi,6*setup.N_theta);                           % angle $\theta$ with fundamental periode $2\pi$  
inp.theta_u_i = linspace(0,pi/3,length(inp.Theta_u_i)/6);                   % angle $\theta_u_i$ for one six of the inverter hexagon
inp.M_i = linspace(0.0,setup.M_i_max,setup.N_Mi);                           % normalised modulation index $M_{i}$
inp.cosphi_i = linspace(0,1,setup.N_cosphi);                                % load factor $cos(\phi)$  
inp.R = zeros(1,length(inp.Theta_u_i));                                     % sector of the inverter hexagon

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pre-processing
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%---------------------------------------------------
% normalization
%---------------------------------------------------
[setup] = normVal(setup);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Calculations
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%---------------------------------------------------
% Generation zeros sequence
%---------------------------------------------------
[pwmPara] = createSS(inp, setup);

%---------------------------------------------------
% Create Sector
%---------------------------------------------------
[inp.R] = createSector(inp.R, inp.Theta_u_i);
         
%---------------------------------------------------
% Calcualtion Inverter state times
%---------------------------------------------------
[pwmPara, v] = pwm(inp, pwmPara, setup);

%---------------------------------------------------                                            
% Calculation $\lambda_{1,frms}^2$
%---------------------------------------------------
[lmd, i] = distPh(inp, pwmPara, v, setup);

%---------------------------------------------------
% Calculation $V_{dc,frms}^2$ and $I_{dc,frms}^2$
%---------------------------------------------------
[i, v, time] = distDcMain(inp, pwmPara, i, v, setup);
                          
%---------------------------------------------------                         
% Calculations semiconductor losses
%---------------------------------------------------
[p] = distSw(v, inp, pwmPara, setup);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Optimizations
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%---------------------------------------------------
% Apply frequency variation
%---------------------------------------------------
[fsTs] = createVSF(inp, pwmPara, lmd, i, v);

%---------------------------------------------------
% Influence frequency variationcosphi_SLF
%---------------------------------------------------
[lmd, i, v] = applyVSF(inp, pwmPara, lmd, i, v, fsTs);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Post-Processing
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%---------------------------------------------------                         
% Scale and Offset
%---------------------------------------------------
[i, v, p] = invNorm(i, v, p, setup);

%---------------------------------------------------                         
% Convert frequency domain
%---------------------------------------------------
[i, v, fsTs] = convertFreq(i, v, fsTs, setup);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Losses Operational Area
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[p, inp] = losses(inp, p, lmd, i, setup);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Plotting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
plotting;